/* This file was generated by SableCC (http://www.sablecc.org/). */

package tesauro.node;

import tesauro.analysis.*;

@SuppressWarnings("nls")
public final class AStringValor extends PValor
{
    private TSymVecVal _symVecVal_;

    public AStringValor()
    {
        // Constructor
    }

    public AStringValor(
        @SuppressWarnings("hiding") TSymVecVal _symVecVal_)
    {
        // Constructor
        setSymVecVal(_symVecVal_);

    }

    @Override
    public Object clone()
    {
        return new AStringValor(
            cloneNode(this._symVecVal_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAStringValor(this);
    }

    public TSymVecVal getSymVecVal()
    {
        return this._symVecVal_;
    }

    public void setSymVecVal(TSymVecVal node)
    {
        if(this._symVecVal_ != null)
        {
            this._symVecVal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._symVecVal_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._symVecVal_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._symVecVal_ == child)
        {
            this._symVecVal_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._symVecVal_ == oldChild)
        {
            setSymVecVal((TSymVecVal) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
