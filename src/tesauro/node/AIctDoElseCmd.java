/* This file was generated by SableCC (http://www.sablecc.org/). */

package tesauro.node;

import tesauro.analysis.*;

@SuppressWarnings("nls")
public final class AIctDoElseCmd extends PCmd
{
    private PIctDoElse _ictDoElse_;

    public AIctDoElseCmd()
    {
        // Constructor
    }

    public AIctDoElseCmd(
        @SuppressWarnings("hiding") PIctDoElse _ictDoElse_)
    {
        // Constructor
        setIctDoElse(_ictDoElse_);

    }

    @Override
    public Object clone()
    {
        return new AIctDoElseCmd(
            cloneNode(this._ictDoElse_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAIctDoElseCmd(this);
    }

    public PIctDoElse getIctDoElse()
    {
        return this._ictDoElse_;
    }

    public void setIctDoElse(PIctDoElse node)
    {
        if(this._ictDoElse_ != null)
        {
            this._ictDoElse_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ictDoElse_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ictDoElse_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ictDoElse_ == child)
        {
            this._ictDoElse_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ictDoElse_ == oldChild)
        {
            setIctDoElse((PIctDoElse) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
