code merge start
	integer l, m, r, i, j, k, n_um, n_dois, n;
	show("Qual o tamanho do vetor?");
	capture(n);
	real a;
	n := 5
	arr[1] := 2.32;
	arr[2] := -1;
	arr[3] := -52.5412;
	arr[4] := 45.556E-3;
	arr[5] := 2.36E2;
	real vector [n] arr;
	show("Valor de l:");
	capture(l);
	show("Valor de r:");
	capture(r); 
	in case that r%2==0 do
		m:= l+r/2;
	else
		m:= l+(r-1)/2;
	n_um:= m - l +1;
	n_dois:= r - m;
    
    { create temp arrays }
	real vector [n_um] L, [n_dois] R;

	{ Copy data to temp arrays L[] and R[] }
	considering i from 1 to n_um by 1 do
		L[i]:= arr[l + i];
	considering j from 0 to n_dois by 1 do
		R[j]:= arr[m + 1+ j];

	{ Merge the temp arrays back into arr[l..r]}
	i:=b1;
	j:=1;
	k:=d1;

	as long as (!(!(i < n_um) or !(j < n_dois))) do
		start
			in case that (L[i] <= R[j]) do
				start
					arr[k]:= L[i];
					i:= i + 1;
				finish
			else
				start
					arr[k]:= R[j];
					j:= j + 1;
				finish
			k := k + 1;
		finish;	
	{ Copy the remaining elements of L[], if there 
       are any }
	as long as (n_um > i) do
		start
			arr[k]:= L[i];
			i := i + 1;
			k := k + 1;
		finish
	{ Copy the remaining elements of R[], if there 
       are any }	
	as long as (-j >= -(n_dois - 1)) do
		start
			arr[k]:= R[j];
			j := j + 1;
			k := k + 1;
		finish
finish
