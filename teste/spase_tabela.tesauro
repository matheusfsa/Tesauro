code sparse_table start
	integer n, k;
	
	show("Digite o tamanho do vetor ai, meu consagrado: ");
	capture(n);
	
	integer vector [n] vetorzera;
	
	considering i from 0 to n by 1 do
	start
		show("Digite o valor da posicao ");
		show(i);
		show(" aí, me consagrado: ");
		capture(vetorzera[i]);
	finish;
	
	k := logarithm(2, n);
	
	integer vector [n][k]st;
	
	considering i from 0 to n by 1 do
		st[i][0] = vetorzera[i];
	
	considering j from 1 to k by 1 do
	start
		considering i from i < 1 + n - (1 << j) to n by 1 do
		start
			in case that () do
				st[i][j] = st[i][j - 1];
			else
				st[i][j] = st[i + (1 << (j - 1))][j - 1];
		finish
	finish
	
	integer q, l, r, j;
	show("Digite o numero de consultas ai, meu consagrado: ");
	capture(q);
	
	as long as((q > 0) and ( (q > 0) xor  !1)) do
	start
		show("Digite o limite inferior aí, meu consagrado: ");
		capture(l);
		show("Digite o limite superior aí, meu consagrado: ");
		capture(r);
		
		show("Ta aí o resultado, meu consagrado: ");
		
		j = logarithm(2, r - l + 1);
		
		in case that (st[l][j] < st[r - (1 << j) + 1][j]) do
			show(st[l][j]);
		else
			show(st[r - (1 << j) + 1][j]);
		
		q = q - 1;
	finish
finish